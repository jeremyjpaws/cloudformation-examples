{
"AWSTemplateFormatVersion": "2010-09-09",
"Resources": {


"WebServerFleet": {
  "Type": "AWS::AutoScaling::AutoScalingGroup",
  "Properties": {
    "MinSize": "1",
    "MaxSize": "10",
    "DesiredCapacity": {
      "Ref": "WebServerCount"
    },
    "VPCZoneIdentifier": [
      {
        "Ref": "PublicSubnet"
      }
    ],
    "LaunchConfigurationName": {
      "Ref": "WebServerLaunchConfig"
    },
    "LoadBalancerNames": [
      {
        "Ref": "PublicElasticLoadBalancer"
      }
    ]
  },
  "Metadata": {
    "AWS::CloudFormation::Designer": {
      "id": "e461def3-43fb-4aee-8014-374a6b7a15f1"
    }
  }

},
"WebServerLaunchConfig": {
  "Type": "AWS::AutoScaling::LaunchConfiguration",
  "Properties": {
    "InstanceType": {
      "Ref": "InstanceType"
    },
    "ImageId": {
      "Fn::FindInMap": [
        "AWSRegionArch2AMI",
        {
          "Ref": "AWS::Region"
        },
        {
          "Fn::FindInMap": [
            "AWSInstanceType2Arch",
            {
              "Ref": "InstanceType"
            },
            "Arch"
          ]
        }
      ]
    },
    "KeyName": {
      "Ref": "KeyName"
    },
    "AssociatePublicIpAddress": "true",
    "UserData": {
      "Fn::Base64": {
        "Fn::Join": [
          "",
          [
            "#!/bin/bash -xe\n",
            "yum update -y aws-cfn-bootstrap\n",
            "# Install the files and packages from the metadata\n",
            "/opt/aws/bin/cfn-init -v ",
            "         --stack ",
            {
              "Ref": "AWS::StackName"
            },
            "         --resource WebServerLaunchConfig ",
            "         --configsets All ",
            "         --region ",
            {
              "Ref": "AWS::Region"
            },
            "\n",
            "# Signal the status from cfn-init\n",
            "/opt/aws/bin/cfn-signal -e $? ",
            "         --stack ",
            {
              "Ref": "AWS::StackName"
            },
            "         --resource WebServerFleet ",
            "         --region ",
            {
              "Ref": "AWS::Region"
            },
            "\n"
          ]
        ]
      }
    },
    "SecurityGroups": [
      {
        "Ref": "WebServerSecurityGroup"
      }
    ]
  },
  "Metadata": {
    "AWS::CloudFormation::Designer": {
      "id": "1ac870e5-1079-4917-96b4-eeaeaf2bc046"
    },
    "AWS::CloudFormation::Init": {
      "configSets": {
        "All": [
          "ConfigureSampleApp"
        ]
      },
      "ConfigureSampleApp": {
        "packages": {
          "yum": {
            "httpd": []
          }
        },
        "files": {
          "/var/www/html/index.html": {
            "content": {
              "Fn::Join": [
                "\n",
                [
                  "<h1>Congratulations, you have successfully launched the AWS CloudFormation sample.</h1>"
                ]
              ]
            },
            "mode": "000644",
            "owner": "root",
            "group": "root"
          }
        },
        "services": {
          "sysvinit": {
            "httpd": {
              "enabled": "true",
              "ensureRunning": "true"
            }
          }
        }
      }
    }
  }
},
"PublicElasticLoadBalancer": {
  "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
  "Properties": {
    "Subnets": [
      {
        "Ref": "PublicSubnet"
      }
    ],
    "SecurityGroups": [
      {
        "Ref": "PublicLoadBalancerSecurityGroup"
      }
    ],
    "Listeners": [
      {
        "LoadBalancerPort": "80",
        "InstancePort": "80",
        "Protocol": "HTTP"
      }
    ],
    "HealthCheck": {
      "Target": "HTTP:80/",
      "HealthyThreshold": "3",
      "UnhealthyThreshold": "5",
      "Interval": "90",
      "Timeout": "60"
    }
  },
  "Metadata": {
    "AWS::CloudFormation::Designer": {
      "id": "86972c93-fd80-4d9c-a3cd-3c53a00a80cd"
    }
  }
},
"PublicLoadBalancerSecurityGroup": {
  "Type": "AWS::EC2::SecurityGroup",
  "Properties": {
    "GroupDescription": "Public Elastic Load Balancing security group with HTTP access on port 80 from the Internet",
    "SecurityGroupIngress": [
      {
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "CidrIp": "0.0.0.0/0"
      }
    ],
    "SecurityGroupEgress": [
      {
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "CidrIp": "0.0.0.0/0"
      }
    ],
    "VpcId": {
      "Ref": "VPC"
    }
  },
  "Metadata": {
    "AWS::CloudFormation::Designer": {
      "id": "37aed81b-6805-40f9-954a-9c56797045b1"
    }
  }
}
},
"Parameters":{
  "VPC":{
    "Type": "String",
    "Description":"VPC to launch the ASG instances in"
  },
  "PublicSubnet": {
    "Type":"String",
    "Description": "Subnet that instances will launch into"
  },
  "InstanceType": {
    "Description": "WebServer EC2 instance type",
    "Type": "String",
    "Default": "t2.micro",
    "AllowedValues": [
      "t1.micro",
      "t2.micro",
      "t2.small",
      "t2.medium",
      "m1.small",
      "m1.medium",
      "m1.large",
      "m1.xlarge",
      "m2.xlarge",
      "m2.2xlarge",
      "m2.4xlarge",
      "m3.medium",
      "m3.large",
      "m3.xlarge",
      "m3.2xlarge",
      "c1.medium",
      "c1.xlarge",
      "c3.large",
      "c3.xlarge",
      "c3.2xlarge",
      "c3.4xlarge",
      "c3.8xlarge",
      "c4.large",
      "c4.xlarge",
      "c4.2xlarge",
      "c4.4xlarge",
      "c4.8xlarge",
      "g2.2xlarge",
      "r3.large",
      "r3.xlarge",
      "r3.2xlarge",
      "r3.4xlarge",
      "r3.8xlarge",
      "i2.xlarge",
      "i2.2xlarge",
      "i2.4xlarge",
      "i2.8xlarge",
      "d2.xlarge",
      "d2.2xlarge",
      "d2.4xlarge",
      "d2.8xlarge",
      "hi1.4xlarge",
      "hs1.8xlarge",
      "cr1.8xlarge",
      "cc2.8xlarge",
      "cg1.4xlarge"
    ],
    "ConstraintDescription": "must be a valid EC2 instance type."
  },
  "WebServerSecurityGroup":{
    "Type":"String",
    "Description":"Security group to apply to instances"
  },
  "KeyName": {
    "Description": "Name of an EC2 KeyPair to enable SSH access to the instance.",
    "Type": "String",
    "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
  },
  "WebServerCount": {
    "Description": "Number of EC2 instances to launch for the WebServer server",
    "Type": "Number",
    "Default": "1"
  },
  "PublicRoute":{
    "Type":"String",
    "Description":"Route for instance traffic"
  }
},

"Mappings": {
  "AWSInstanceType2Arch": {
    "t1.micro": {
      "Arch": "PV64"
    },
    "t2.micro": {
      "Arch": "HVM64"
    },
    "t2.small": {
      "Arch": "HVM64"
    },
    "t2.medium": {
      "Arch": "HVM64"
    },
    "m1.small": {
      "Arch": "PV64"
    },
    "m1.medium": {
      "Arch": "PV64"
    },
    "m1.large": {
      "Arch": "PV64"
    },
    "m1.xlarge": {
      "Arch": "PV64"
    },
    "m2.xlarge": {
      "Arch": "PV64"
    },
    "m2.2xlarge": {
      "Arch": "PV64"
    },
    "m2.4xlarge": {
      "Arch": "PV64"
    },
    "m3.medium": {
      "Arch": "HVM64"
    },
    "m3.large": {
      "Arch": "HVM64"
    },
    "m3.xlarge": {
      "Arch": "HVM64"
    },
    "m3.2xlarge": {
      "Arch": "HVM64"
    },
    "c1.medium": {
      "Arch": "PV64"
    },
    "c1.xlarge": {
      "Arch": "PV64"
    },
    "c3.large": {
      "Arch": "HVM64"
    },
    "c3.xlarge": {
      "Arch": "HVM64"
    },
    "c3.2xlarge": {
      "Arch": "HVM64"
    },
    "c3.4xlarge": {
      "Arch": "HVM64"
    },
    "c3.8xlarge": {
      "Arch": "HVM64"
    },
    "c4.large": {
      "Arch": "HVM64"
    },
    "c4.xlarge": {
      "Arch": "HVM64"
    },
    "c4.2xlarge": {
      "Arch": "HVM64"
    },
    "c4.4xlarge": {
      "Arch": "HVM64"
    },
    "c4.8xlarge": {
      "Arch": "HVM64"
    },
    "g2.2xlarge": {
      "Arch": "HVMG2"
    },
    "r3.large": {
      "Arch": "HVM64"
    },
    "r3.xlarge": {
      "Arch": "HVM64"
    },
    "r3.2xlarge": {
      "Arch": "HVM64"
    },
    "r3.4xlarge": {
      "Arch": "HVM64"
    },
    "r3.8xlarge": {
      "Arch": "HVM64"
    },
    "i2.xlarge": {
      "Arch": "HVM64"
    },
    "i2.2xlarge": {
      "Arch": "HVM64"
    },
    "i2.4xlarge": {
      "Arch": "HVM64"
    },
    "i2.8xlarge": {
      "Arch": "HVM64"
    },
    "d2.xlarge": {
      "Arch": "HVM64"
    },
    "d2.2xlarge": {
      "Arch": "HVM64"
    },
    "d2.4xlarge": {
      "Arch": "HVM64"
    },
    "d2.8xlarge": {
      "Arch": "HVM64"
    },
    "hi1.4xlarge": {
      "Arch": "HVM64"
    },
    "hs1.8xlarge": {
      "Arch": "HVM64"
    },
    "cr1.8xlarge": {
      "Arch": "HVM64"
    },
    "cc2.8xlarge": {
      "Arch": "HVM64"
    }
  },
  "AWSRegionArch2AMI": {
    "us-east-1": {
      "PV64": "ami-1ccae774",
      "HVM64": "ami-1ecae776",
      "HVMG2": "ami-8c6b40e4"
    },
    "us-west-2": {
      "PV64": "ami-ff527ecf",
      "HVM64": "ami-e7527ed7",
      "HVMG2": "ami-abbe919b"
    },
    "us-west-1": {
      "PV64": "ami-d514f291",
      "HVM64": "ami-d114f295",
      "HVMG2": "ami-f31ffeb7"
    },
    "eu-west-1": {
      "PV64": "ami-bf0897c8",
      "HVM64": "ami-a10897d6",
      "HVMG2": "ami-d5bc24a2"
    },
    "eu-central-1": {
      "PV64": "ami-ac221fb1",
      "HVM64": "ami-a8221fb5",
      "HVMG2": "ami-7cd2ef61"
    },
    "ap-northeast-1": {
      "PV64": "ami-27f90e27",
      "HVM64": "ami-cbf90ecb",
      "HVMG2": "ami-6318e863"
    },
    "ap-southeast-1": {
      "PV64": "ami-acd9e8fe",
      "HVM64": "ami-68d8e93a",
      "HVMG2": "ami-3807376a"
    },
    "ap-southeast-2": {
      "PV64": "ami-ff9cecc5",
      "HVM64": "ami-fd9cecc7",
      "HVMG2": "ami-89790ab3"
    },
    "sa-east-1": {
      "PV64": "ami-bb2890a6",
      "HVM64": "ami-b52890a8",
      "HVMG2": "NOT_SUPPORTED"
    },
    "cn-north-1": {
      "PV64": "ami-fa39abc3",
      "HVM64": "ami-f239abcb",
      "HVMG2": "NOT_SUPPORTED"
    }
  }
},
"Outputs":{
  "DNSName":{
    "Value": {
      "Fn::GetAtt": [
          "PublicElasticLoadBalancer",
          "DNSName"
        ]
      },
    "Description": "DNS name of the ELB"
  }
}
}
